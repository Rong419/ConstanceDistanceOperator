<!-- Build ConstantDistance. It is also used by Hudson ConstantDistance project. JUnit test is available for this build. -->
<project basedir="." default="addon" name="BUILD_ConstantDistance">
	<description>
	    Build ConstantDistance. 
            Also used by Hudson ConstantDistance project. 
	    JUnit test is available for this build.
	    $Id: build_ConstantDistance.xml $
	</description>

	<!-- set global properties for this build -->
	<property name="srcConstantDistance" location="src" />
	<property name="buildConstantDistance" location="build" />
	<property name="libConstantDistance" location="lib" />
	<property name="release_dir" value="release" />
	<property name="distConstantDistance" location="${buildConstantDistance}/dist" />
	<property name="beast2path" location="../beast2" />
	<property name="libBeast2" location="${beast2path}/lib" />
	<property name="srcBeast2" location="${beast2path}/src" />
	<property name="beast2classpath" location="${beast2path}/build" />
	<property name="Add_on_dir" value="${release_dir}/add-on" />
	<property name="version" value="0.0.1" />

    <import file="${beast2path}/build.xml" />

	<property name="main_class_BEAST" value="beast.app.BeastMCMC" />
	<property name="report" value="${buildConstantDistance}/junitreport"/>

	<path id="classpath">
        <pathelement path="${buildConstantDistance}"/>
		<fileset dir="${libBeast2}" includes="junit-4.8.2.jar"/>
        <pathelement path="${beast2classpath}"/>
		<fileset dir="${beast2path}/lib" includes="jam.jar"/>
		<fileset dir="${beast2path}/lib" includes="beagle.jar"/>
		<fileset dir="${beast2path}/lib" includes="fest.jar"/>
		<fileset dir="${beast2path}/lib" includes="colt.jar"/>
	</path>

	<!-- start -->
	<target name="initConstantDistance">
		<echo message="${ant.project.name}: ${ant.file}" />
	</target>

	<target name="cleanConstantDistance">
    	<delete dir="${buildConstantDistance}" />
	</target>

	<!-- clean previous build, and then compile Java source code, and Juint test -->
	<target name="build_all_ConstantDistance" depends="cleanConstantDistance,compile-allConstantDistance,junitConstantDistance"
        description="Clean and Build all run-time stuff">
	</target>

	<!-- clean previous build, compile Java source code, and Junit test, and make the beast.jar and beauti.jar -->
	<target name="build_jar_all_ConstantDistance" depends="cleanConstantDistance,compile-allConstantDistance,junitConstantDistance,dist_all_ConstantDistance"
        description="Clean and Build all run-time stuff">
	</target>


	<!-- No JUnit Test, clean previous build, compile Java source code, and make the ConstantDistance.jar and beauti.jar -->
	<target name="build_jar_all_ConstantDistance_NoJUnitTest" depends="cleanConstantDistance,compile-allConstantDistance,dist_all_ConstantDistance"
        description="Clean and Build all run-time stuff">
	</target>

	<!-- compile Java source code -->
	<target name="compile-allConstantDistance" depends="initConstantDistance,compile-all">


	    <!-- Capture the path as a delimited property using the refid attribute -->
	    <property name="myclasspath" refid="classpath"/>
	    <!-- Emit the property to the ant console -->
	    <echo message="Classpath = ${myclasspath}"/>

		<mkdir dir="${buildConstantDistance}" />

		<!-- Compile the java code from ${srcConstantDistance} into ${buildConstantDistance} /bin -->
		<javac srcdir="${srcConstantDistance}" destdir="${buildConstantDistance}" classpathref="classpath" 
		       fork="true"
		       memoryinitialsize="256m"
		       memorymaximumsize="256m"
			   source="1.8"
		       target="1.8">
			<include name="beast/**/**" />
			<!-- compile JUnit test classes -->
			<include name="test/beast/**" />
		</javac>
		<echo message="Successfully compiled." />
	</target>

	<!-- make the beast.jar and beauti.jar -->
	<target name="dist_all_ConstantDistance" depends="compile-allConstantDistance" description="create ConstantDistance jar">
		<!-- Create the distribution directory -->
		<mkdir dir="${distConstantDistance}" />

		<!-- Put everything in ${buildConstantDistance} into the beast.jar file -->
		<jar jarfile="${distConstantDistance}/ConstantDistance.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Main-Class" value="${main_class_BEAST}" />
			</manifest>
			<fileset dir="${buildConstantDistance}">
				<include name="beast/**/*.class" />
			</fileset>
			<fileset dir="${beast2classpath}">
				<include name="beast/**/*.class" />
				<include name="beast/**/*.properties" />
				<include name="beast/**/*.png" />
				<include name="beagle/**/*.class" />
				<include name="org/**/*.class" />
			</fileset>
		</jar>
		<jar jarfile="${distConstantDistance}/ConstantDistance.src.jar">
			<fileset dir="${srcConstantDistance}">
				<include name="beast/**/*.java" />
				<include name="beast/**/*.png" />
				<include name="beast/**/*.xsl" />
			</fileset>
        </jar>
		<jar jarfile="${distConstantDistance}/ConstantDistance.addon.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
			</manifest>
			<fileset dir="${buildConstantDistance}">
				<include name="beast/**/*.class" />
				<include name="util/**/*.class" />
				<include name="**/*.properties" />
			</fileset>
		</jar>
	</target>

	<!-- run beast.jar -->
	<target name="run_ConstantDistance">
		<java jar="${distConstantDistance}/ConstantDistance.jar" fork="true" />
	</target>

	
	<!-- JUnit test -->
	<target name="junitConstantDistance">
		<mkdir dir="${report}" />
		<junit printsummary="yes"> <!--showoutput='yes'-->
			<classpath>
				<path refid="classpath" />
				<path location="${buildConstantDistance}" />
			</classpath>

			<formatter type="xml" />

			<batchtest fork="yes" todir="${report}">
				<fileset dir="${srcConstantDistance}">
                    <include name="test/**/*Test.java"/>                                         
				</fileset>
				<fileset dir="${srcBeast2}">
                    <include name="test/beast/integration/**/*Test.java"/>                                         
                    <exclude name="test/beast/integration/**/ResumeTest.java"/>                                         
				</fileset>
			</batchtest>
		</junit>
		<echo message="JUnit test finished." />
	</target>
    
    <target name="junitreport">
		<junitreport todir="${report}">
			<fileset dir="${report}" includes="*.xml"/>
			<report format="frames" todir="${report}"/>
		</junitreport>
		<echo message="JUnit test report finished." />
	</target>


	<target name="addon"
	        depends="build_jar_all_ConstantDistance_NoJUnitTest"
	        description="release BEAST 2 add-on version of ConstantDistance">

		<delete dir="${Add_on_dir}" />
		<!-- Create the release directory -->
		<mkdir dir="${Add_on_dir}" />
		<mkdir dir="${Add_on_dir}/lib" />
		<mkdir dir="${Add_on_dir}/examples" />
		<mkdir dir="${Add_on_dir}/templates" />

		<copy todir="${Add_on_dir}">
			<fileset file="version.xml"/>
		</copy>
		<copy todir="${Add_on_dir}/examples">
			<fileset dir="examples" />
		</copy>
		<copy todir="${Add_on_dir}/lib">
			<fileset dir="${distConstantDistance}" includes="ConstantDistance.addon.jar" />
		</copy>
		<copy todir="${Add_on_dir}">
			<fileset dir="${distConstantDistance}" includes="ConstantDistance.src.jar" />
		</copy>
		<copy todir="${Add_on_dir}/templates">
			<fileset file="templates/*.xml" />
		</copy>

		<jar jarfile="${distConstantDistance}/ConstantDistance.addon.v${version}.zip">
			<fileset dir="${Add_on_dir}">
				<include name="**/*" />
			</fileset>
        </jar>
		<echo message="Add-on version v${version} release is finished." />
	</target>

</project>
